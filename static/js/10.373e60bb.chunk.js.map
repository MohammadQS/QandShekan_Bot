{"version":3,"file":"static/js/10.373e60bb.chunk.js","mappings":"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","sources":["Pages/Wallet.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { TextField, Button, List, ListItem, ListItemText, Paper, Typography } from '@mui/material';\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nconst API_ENDPOINT = \"api.mocaland.ir:88/QandShekan\"\r\n\r\nexport default function CreditPage({user_id,active}) {\r\n    const [PopUpText , setPopUpText] = useState({\"status\":false});\r\n    const [PopUpLoading, setPopUpLoading] = useState(false);\r\n    const [AccountBalance , setAccountBalance] = useState(0);\r\n\r\n    const [amount, setAmount] = useState('');\r\n    const [transactions, setTransactions] = useState([]);\r\n\r\n    const handleAmountChange = (event) => {\r\n        setAmount(event.target.value);\r\n    };\r\n\r\n    function GetWalletInfo(){\r\n        setPopUpLoading(true);\r\n        var formdata = new FormData();\r\n        formdata.append(\"action\", \"GetWalletInfo\");\r\n        formdata.append(\"user_id\", user_id);\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            body: formdata,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(`https://${API_ENDPOINT}/api.php`, requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                setPopUpLoading(false);\r\n                const res = JSON.parse(result);\r\n                if (res.status) {\r\n                    setAccountBalance(res.balance);\r\n                    setTransactions(res.transactions);\r\n                }else{\r\n                    setPopUpText({\"status\":true,\"title\":\"ناموفق\",\"text\":res.msg});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setPopUpLoading(false);\r\n                setPopUpText({\"status\":true,\"title\":\"ناموفق\",\"text\":\"خطای ناشناخته ای رخ داد ، لطفا دقایقی بعد مجددا امتحان کنید!\"});\r\n            });\r\n    }\r\n    function CreatePay(){\r\n        if (amount >= 20000) {\r\n            setPopUpLoading(true);\r\n            var formdata = new FormData();\r\n            formdata.append(\"action\", \"CreatePay\");\r\n            formdata.append(\"user_id\", user_id);\r\n            formdata.append(\"amount\", amount);\r\n            var requestOptions = {\r\n                method: 'POST',\r\n                body: formdata,\r\n                redirect: 'follow'\r\n            };\r\n\r\n            fetch(`https://${API_ENDPOINT}/api.php`, requestOptions)\r\n                .then(response => response.text())\r\n                .then(result => {\r\n                    setPopUpLoading(false);\r\n                    const res = JSON.parse(result);\r\n                    if (res.status) {\r\n                        setPopUpText({\"status\": true, \"title\": \"موفق\", \"text\": res.msg});\r\n                    } else {\r\n                        setPopUpText({\"status\": true, \"title\": \"ناموفق\", \"text\": res.msg});\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setPopUpLoading(false);\r\n                    setPopUpText({\r\n                        \"status\": true,\r\n                        \"title\": \"ناموفق\",\r\n                        \"text\": \"خطای ناشناخته ای رخ داد ، لطفا دقایقی بعد مجددا امتحان کنید!\"\r\n                    });\r\n                });\r\n        }else{\r\n            setPopUpText({\"status\": true, \"title\": \"خطا\", \"text\": \"حداقل مقدار قابل پرداخت 20000 تومان میباشد!\"});\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (active){\r\n            GetWalletInfo();\r\n        }\r\n    }, [active]);\r\n    function ClosePopUpText(){\r\n        setPopUpText({\"status\":false});\r\n    }\r\n    if (active)\r\n        return (\r\n            <div style={{direction : \"rtl\"}}>\r\n                <Paper elevation={3} sx={{ padding: '20px', margin: '20px', maxWidth: '500px' }}>\r\n                    <Typography variant=\"h7\" gutterBottom>\r\n                       موجودی فعلی شما : {AccountBalance} تومان\r\n                    </Typography>\r\n                </Paper>\r\n                <Paper elevation={3} sx={{ padding: '20px', margin: '20px', maxWidth: '500px' }}>\r\n                    <Typography variant=\"h5\" gutterBottom>\r\n                        افزایش اعتبار\r\n                    </Typography>\r\n                    <TextField\r\n                        label=\"مبلغ موردنیاز (تومان)\"\r\n                        variant=\"outlined\"\r\n                        value={amount}\r\n                        onChange={handleAmountChange}\r\n                        fullWidth\r\n                        sx={{ marginBottom: '20px',direction:\"rtl\" , textAlign:\"right\" }}\r\n                    />\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={CreatePay} fullWidth>\r\n                        پرداخت\r\n                    </Button>\r\n                    <Stack sx={{ width: '100%' ,direction:\"rtl\" , mt:\"10px\"}} spacing={1}>\r\n                        <Alert severity=\"warning\"> حداقل مقدار پرداخت ، 20 هزار تومان میباشد.</Alert>\r\n                        <Alert severity=\"warning\"> بعد از پرداخت امکان بازگشت وجه وجود ندارد!</Alert>\r\n                        <Alert severity=\"warning\"> به محض انتخاب دکمه پرداخت ، جزئیات در قالب یک پیام از طرف ربات قند شکن به شما ارسال میگردد.</Alert>\r\n                    </Stack>\r\n                </Paper>\r\n\r\n                <Paper elevation={3} sx={{ padding: '20px', margin: '20px', maxWidth: '500px' }}>\r\n                    <Typography variant=\"h5\" gutterBottom>\r\n                        تراکنش‌های کیف پول\r\n                    </Typography>\r\n                    <List>\r\n                        {transactions.map((transaction) => (\r\n                            <ListItem key={transaction.id}>\r\n                                {transaction.amount>0\r\n                                ?\r\n                                    <ListItemText sx={{color:\"green\",\"text-align\":\"right\"}} primary={`واریز بابت : ${transaction.description}`} secondary={`مبلغ : ${transaction.amount} تومان`} />\r\n                                :\r\n                                    <ListItemText sx={{color:\"red\",\"text-align\":\"right\"}} primary={`برداشت بابت : ${transaction.description}`} secondary={`مبلغ : ${transaction.amount*-1} تومان`} />\r\n                                }\r\n\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Paper>\r\n                <Backdrop\r\n                    sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                    open={PopUpLoading}\r\n                >\r\n                    {/* CircularProgress برای نمایش یک انیمیشن بارگذاری استفاده می‌شود */}\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n                <div>\r\n                    <Dialog open={PopUpText.status} sx={{direction:\"rtl\"}} onClose={()=>ClosePopUpText()}>\r\n                        <DialogTitle>{PopUpText.title}</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                {PopUpText.text}\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={()=>ClosePopUpText()}>بستن</Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n            </div>\r\n        );\r\n    return (<></>);\r\n}\r\n"],"names":["API_ENDPOINT","CreditPage","_ref","user_id","active","PopUpText","setPopUpText","useState","PopUpLoading","setPopUpLoading","AccountBalance","setAccountBalance","amount","setAmount","transactions","setTransactions","ClosePopUpText","useEffect","formdata","FormData","append","requestOptions","method","body","redirect","fetch","concat","then","response","text","result","res","JSON","parse","status","balance","msg","catch","error","GetWalletInfo","_jsxs","style","direction","children","_jsx","Paper","elevation","sx","padding","margin","maxWidth","Typography","variant","gutterBottom","TextField","label","value","onChange","event","target","fullWidth","marginBottom","textAlign","Button","color","onClick","Stack","width","mt","spacing","Alert","severity","List","map","transaction","ListItem","ListItemText","primary","description","secondary","id","Backdrop","zIndex","theme","drawer","open","CircularProgress","Dialog","onClose","DialogTitle","title","DialogContent","DialogContentText","DialogActions","_Fragment"],"sourceRoot":""}